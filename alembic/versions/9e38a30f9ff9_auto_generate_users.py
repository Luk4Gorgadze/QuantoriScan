"""Auto Generate users

Revision ID: 9e38a30f9ff9
Revises: 67a6a1643d45
Create Date: 2024-11-09 21:27:56.666540

"""
from typing import Sequence, Union

from alembic import op
from sqlalchemy import insert, select
from sqlalchemy.orm import Session
from app.auth import bcrypt_context
from app.db.models import User
from app.db.database import engine


# revision identifiers, used by Alembic.
revision: str = '9e38a30f9ff9'
down_revision: Union[str, None] = '67a6a1643d45'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    with Session(engine) as session:
        for email, password in [
            ('user1@gmail.com', 'password1'),
            ('user2@gmail.com', 'password2'),
            ('user3@gmail.com', 'password3')
        ]:
            # Check if user exists
            user_exists = session.execute(
                select(User).where(User.email == email)
            ).scalar() is not None
            
            # If user doesn't exist, add user
            if not user_exists:
                op.execute(
                    insert(User).values(
                        email=email,
                        password=bcrypt_context.hash(password),
                    )
                )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
